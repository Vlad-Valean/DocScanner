
services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: doc_scanner
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - docscanner-net

  pgadmin:
    image: dpage/pgadmin4:9.4.0
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - docscanner-net

  docscanner-ocr:
    build:
      context: ./ocrmicroservice
      dockerfile: Dockerfile
    container_name: docscanner-ocr
    ports:
      - "8000:8000"
    restart: always
    networks:
      - docscanner-net

#  docscanner-backend:
#    build:
#      context: ./backend
#      dockerfile: Dockerfile
#    container_name: docscanner-backend
#    ports:
#      - "5099:5099"
#    environment:
#      - ASPNETCORE_ENVIRONMENT=Production
#      - ASPNETCORE_URLS=http://+:5099
#    depends_on:
#      - postgres
#      - docscanner-ocr
#    networks:
#      - docscanner-net
#
#  docscanner-frontend:
#    build:
#      context: ./frontend
#      dockerfile: Dockerfile
#    container_name: docscanner-frontend
#    ports:
#      - "3000:3000"
#    restart: always
#    depends_on:
#      - docscanner-backend
#    networks:
#      - docscanner-net

volumes:
  postgres_data:

networks:
  docscanner-net:
